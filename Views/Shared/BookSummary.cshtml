@model Book 

@{
    ViewData["dataTarget"] = String.Format("#bookModal{0}", Model.BookId);
    ViewData["modalId"] = String.Format("bookModal{0}", Model.BookId);
    bool hasMiddleName = !string.IsNullOrEmpty(Model.AuthorMiddleInitial);
}

<tr>
    <td>@Model.Title</td>
    <td>@(Model.AuthorFirstName + ' ' + (hasMiddleName ? Model.AuthorMiddleInitial + ". " : "") + Model.AuthorLastName)</td>
    <td>@Model.Publisher</td>
    <td>@Model.ISBN</td>
    <td>@Model.Classification</td>
    <td>@Model.Category</td>
    <td>@Model.NumberOfPages</td>
    <td>$@Model.Price</td>
    <td>
        @if (Model.Price < 20)
        {
            <h5><span class="badge badge-danger">Low Price!</span></h5>
        }
    </td>
    <td>
        <form id="@Model.BookId" asp-page="/Cart" method="post">
            <input type="hidden" asp-for="BookId" />
            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
            <span class="card-text p-1">
                <button type="submit" class="btn-success btn-sm pull-right" style="float:right">
                    Add to Cart
                </button>
            </span>
        </form>
    </td>
</tr>